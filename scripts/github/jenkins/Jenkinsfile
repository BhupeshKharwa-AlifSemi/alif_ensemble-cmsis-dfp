pipeline {
    agent any
    options {
        skipDefaultCheckout(true)
    }
    stages {
        stage('Install Dependencies') {
            steps {
                script {
                    sh """#!/bin/bash -xe
                    echo -e "✔️ None."
                    """
                }
            }
        }
        stage('Environment') {
            steps {
                script {
                    sh """#!/bin/bash -xe
                        printenv
                        echo -e "✔️ Displayed all environment setting."
                    """
                }
            }
        }
        stage('checkout') {
            steps {
                script {
                    sh '''

                    $ARMCLANG_PATH/../../bin/armlm activate --server http://10.10.60.10:7070 --product HWSKT-EAC0

                    if [ -d ensemble-cmsis-dfp_DEV ]; then
                        echo "Deleting older repo..."
                        rm -rf ensemble-cmsis-dfp_DEV
                    fi

                    echo -e "✔️ Checkout Repo 'ensemble-cmsis-dfp_DEV' branch '$CHANGE_BRANCH' '$BRANCH_NAME'."
                    git clone org-115832732@github.com:AlifSemiDev/ensemble-cmsis-dfp_DEV.git
                    cd ensemble-cmsis-dfp_DEV
                    echo -e "✔️ Cloning is completed."
                    git log -4
                    echo -e "✔️ Checkout branch $CHANGE_BRANCH."
                    git checkout $CHANGE_BRANCH
                    git log -4
                    echo -e "✔️ Checkout is completed."
                    cd scripts/cmake
                    chmod -Rv 777 *.sh
                    ./run.sh
                    ./run.sh -p -c --fresh -DBOOT=MRAM            -b --clean-only
                    ./run.sh -p -c --fresh -DRTSS=HE              -b --clean-only
                    ./run.sh -p -c --fresh -DBOOT=MRAM -DRTSS=HE  -b --clean-only
                    ./run.sh -p gcc,gcc_build,gcc_build_test -c --fresh -DBOOT=MRAM            -b --clean-only
                    ./run.sh -p gcc,gcc_build,gcc_build_test -c --fresh -DRTSS=HE              -b --clean-only
                    ./run.sh -p gcc,gcc_build,gcc_build_test -c --fresh -DBOOT=MRAM -DRTSS=HE  -b --clean-only
                    '''
                }
            }
        }
    }
}
